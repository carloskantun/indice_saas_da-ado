/**
 * EXPENSES.JS - VERSI√ìN SIMPLIFICADA PARA PRUEBAS
 */

console.log('üöÄ Expenses.js SIMPLIFICADO - Iniciando carga...');

$(document).ready(function() {
    console.log('‚úÖ jQuery cargado correctamente');
    console.log('üìä Inicializando m√≥dulo de gastos SIMPLIFICADO...');
    
    try {
        // Solo vincular eventos b√°sicos
        bindBasicEvents();
        console.log('‚úÖ Eventos b√°sicos vinculados');
        
        // Configurar modales b√°sicos
        setupBasicModals();
        console.log('‚úÖ Modales configurados');
        
        console.log('‚úÖ M√≥dulo SIMPLIFICADO inicializado correctamente');
    } catch (error) {
        console.error('‚ùå Error inicializando gastos SIMPLIFICADO:', error);
    }
});

function bindBasicEvents() {
    console.log('üîó Binding eventos b√°sicos SIMPLIFICADO...');
    
    // Formulario de gastos
    $(document).off('submit', '#expenseForm').on('submit', '#expenseForm', function(e) {
        e.preventDefault();
        console.log('üìù Formulario de gastos enviado - SIMPLIFICADO');
        handleExpenseSubmit.call(this, e);
    });
    
    // Formulario de √≥rdenes de compra
    $(document).off('submit', '#orderForm').on('submit', '#orderForm', function(e) {
        e.preventDefault();
        console.log('üì¶ Formulario de orden de compra enviado - SIMPLIFICADO');
        handleOrderSubmit.call(this, e);
    });
    
    // Formulario de proveedores
    $(document).off('submit', '#providerForm').on('submit', '#providerForm', function(e) {
        e.preventDefault();
        console.log('üè¢ Formulario de proveedor enviado - SIMPLIFICADO');
        handleProviderSubmit.call(this, e);
    });
    
    console.log('‚úÖ Eventos b√°sicos vinculados correctamente - SIMPLIFICADO');
}

function setupBasicModals() {
    console.log('üéØ Configurando modales b√°sicos...');
    
    $('.modal').on('shown.bs.modal', function() {
        const modalId = this.id;
        const $modal = $(this);
        console.log('‚ú® Modal abierto:', modalId);
        
        // Configurar Select2 b√°sico
        $modal.find('select').each(function() {
            const $select = $(this);
            if (!$select.hasClass('select2-hidden-accessible')) {
                $select.select2({
                    dropdownParent: $modal,
                    width: '100%',
                    placeholder: 'Seleccionar...'
                });
                console.log('‚úÖ Select2 configurado en modal');
            }
        });
    });
}

// Funciones de manejo de formularios (copiadas del archivo original)
function handleExpenseSubmit(e) {
    console.log('üí∞ Procesando nuevo gasto - SIMPLIFICADO...');
    
    const formData = new FormData(this);
    formData.append('action', 'create_expense');
    
    // Log de datos del formulario
    console.log('üìã Datos del formulario:');
    for (let [key, value] of formData.entries()) {
        console.log(`  ${key}: ${value}`);
    }
    
    $.ajax({
        url: 'controller.php',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        beforeSend: function() {
            console.log('üì§ Enviando solicitud...');
            $('.btn-submit').prop('disabled', true).text('Guardando...');
        }
    })
    .done(function(response) {
        console.log('‚úÖ Respuesta recibida:', response);
        try {
            const result = JSON.parse(response);
            if (result.success) {
                alert('‚úÖ Gasto creado exitosamente: ' + result.message);
                $('#expenseModal').modal('hide');
                location.reload();
            } else {
                alert('‚ùå Error: ' + (result.error || 'Error al crear gasto'));
            }
        } catch (parseError) {
            console.error('‚ùå Error parseando respuesta:', parseError);
            console.log('üìù Respuesta raw:', response);
            alert('‚ùå Error en el formato de respuesta del servidor');
        }
    })
    .fail(function(xhr) {
        console.error('‚ùå Error en solicitud:', xhr);
        console.log('üìù Status:', xhr.status);
        console.log('üìù Response text:', xhr.responseText);
        alert('‚ùå Error del servidor: ' + xhr.status);
    })
    .always(function() {
        $('.btn-submit').prop('disabled', false).text('Guardar');
    });
}

function handleOrderSubmit(e) {
    console.log('üìã Procesando nueva orden - SIMPLIFICADO...');
    
    const formData = new FormData(this);
    formData.append('action', 'create_order');
    
    console.log('üìã Datos del formulario:');
    for (let [key, value] of formData.entries()) {
        console.log(`  ${key}: ${value}`);
    }
    
    $.ajax({
        url: 'controller.php',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        beforeSend: function() {
            console.log('üì§ Enviando orden...');
            $('.btn-submit').prop('disabled', true).text('Guardando...');
        }
    })
    .done(function(response) {
        console.log('‚úÖ Respuesta orden:', response);
        try {
            const result = JSON.parse(response);
            if (result.success) {
                alert('‚úÖ Orden creada exitosamente: ' + result.message);
                $('#orderModal').modal('hide');
                location.reload();
            } else {
                alert('‚ùå Error: ' + (result.error || 'Error al crear orden'));
            }
        } catch (parseError) {
            console.error('‚ùå Error parseando respuesta orden:', parseError);
            alert('‚ùå Error en el formato de respuesta del servidor');
        }
    })
    .fail(function(xhr) {
        console.error('‚ùå Error en solicitud orden:', xhr);
        alert('‚ùå Error del servidor: ' + xhr.status);
    })
    .always(function() {
        $('.btn-submit').prop('disabled', false).text('Crear Orden');
    });
}

function handleProviderSubmit(e) {
    console.log('üè¢ Procesando proveedor - SIMPLIFICADO...');
    
    const formData = new FormData(this);
    formData.append('action', 'create_provider');
    
    console.log('üìã Datos del formulario:');
    for (let [key, value] of formData.entries()) {
        console.log(`  ${key}: ${value}`);
    }
    
    $.ajax({
        url: 'controller.php',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        beforeSend: function() {
            console.log('üì§ Enviando proveedor...');
            $('.btn-submit').prop('disabled', true).text('Guardando...');
        }
    })
    .done(function(response) {
        console.log('‚úÖ Respuesta proveedor:', response);
        try {
            const result = JSON.parse(response);
            if (result.success) {
                alert('‚úÖ Proveedor creado exitosamente: ' + result.message);
                $('#providerModal').modal('hide');
                location.reload();
            } else {
                alert('‚ùå Error: ' + (result.error || 'Error al crear proveedor'));
            }
        } catch (parseError) {
            console.error('‚ùå Error parseando respuesta proveedor:', parseError);
            alert('‚ùå Error en el formato de respuesta del servidor');
        }
    })
    .fail(function(xhr) {
        console.error('‚ùå Error en solicitud proveedor:', xhr);
        alert('‚ùå Error del servidor: ' + xhr.status);
    })
    .always(function() {
        $('.btn-submit').prop('disabled', false).text('Guardar');
    });
}

// Funci√≥n de diagn√≥stico
window.diagnosticarEventos = function() {
    console.log('üîç DIAGN√ìSTICO DE EVENTOS - SIMPLIFICADO:');
    
    const forms = ['#expenseForm', '#orderForm', '#providerForm'];
    forms.forEach(formId => {
        const form = $(formId);
        if (form.length > 0) {
            console.log(`‚úÖ Formulario ${formId} encontrado`);
            
            const events = $._data(form[0], 'events');
            if (events && events.submit) {
                console.log(`‚úÖ Evento submit vinculado a ${formId}`);
            } else {
                console.log(`‚ùå Evento submit NO vinculado a ${formId}`);
            }
        } else {
            console.log(`‚ùå Formulario ${formId} NO encontrado`);
        }
    });
    
    console.log('üèÅ Diagn√≥stico SIMPLIFICADO completado');
};

console.log('‚úÖ Expenses.js SIMPLIFICADO - Carga completada');
